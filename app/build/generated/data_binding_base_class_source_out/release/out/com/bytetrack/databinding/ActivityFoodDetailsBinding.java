// Generated by view binder compiler. Do not edit!
package com.bytetrack.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.Group;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bytetrack.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFoodDetailsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button addFoodButton;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final TextView caloriesText;

  @NonNull
  public final TextView carbsText;

  @NonNull
  public final Group detailsGroup;

  @NonNull
  public final TextView errorMessage;

  @NonNull
  public final TextView fatText;

  @NonNull
  public final ImageView foodImage;

  @NonNull
  public final TextView foodNameText;

  @NonNull
  public final TextView mealTypeLabel;

  @NonNull
  public final RadioGroup mealTypeRadioGroup;

  @NonNull
  public final CardView nutritionCard;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView proteinText;

  @NonNull
  public final RadioButton radioBreakfast;

  @NonNull
  public final RadioButton radioDinner;

  @NonNull
  public final RadioButton radioLunch;

  @NonNull
  public final RadioButton radioSnack;

  @NonNull
  public final TextInputEditText servingSizeInput;

  @NonNull
  public final TextInputLayout servingSizeLayout;

  private ActivityFoodDetailsBinding(@NonNull ScrollView rootView, @NonNull Button addFoodButton,
      @NonNull ImageButton backButton, @NonNull TextView caloriesText, @NonNull TextView carbsText,
      @NonNull Group detailsGroup, @NonNull TextView errorMessage, @NonNull TextView fatText,
      @NonNull ImageView foodImage, @NonNull TextView foodNameText, @NonNull TextView mealTypeLabel,
      @NonNull RadioGroup mealTypeRadioGroup, @NonNull CardView nutritionCard,
      @NonNull ProgressBar progressBar, @NonNull TextView proteinText,
      @NonNull RadioButton radioBreakfast, @NonNull RadioButton radioDinner,
      @NonNull RadioButton radioLunch, @NonNull RadioButton radioSnack,
      @NonNull TextInputEditText servingSizeInput, @NonNull TextInputLayout servingSizeLayout) {
    this.rootView = rootView;
    this.addFoodButton = addFoodButton;
    this.backButton = backButton;
    this.caloriesText = caloriesText;
    this.carbsText = carbsText;
    this.detailsGroup = detailsGroup;
    this.errorMessage = errorMessage;
    this.fatText = fatText;
    this.foodImage = foodImage;
    this.foodNameText = foodNameText;
    this.mealTypeLabel = mealTypeLabel;
    this.mealTypeRadioGroup = mealTypeRadioGroup;
    this.nutritionCard = nutritionCard;
    this.progressBar = progressBar;
    this.proteinText = proteinText;
    this.radioBreakfast = radioBreakfast;
    this.radioDinner = radioDinner;
    this.radioLunch = radioLunch;
    this.radioSnack = radioSnack;
    this.servingSizeInput = servingSizeInput;
    this.servingSizeLayout = servingSizeLayout;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFoodDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFoodDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_food_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFoodDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_food_button;
      Button addFoodButton = ViewBindings.findChildViewById(rootView, id);
      if (addFoodButton == null) {
        break missingId;
      }

      id = R.id.back_button;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.calories_text;
      TextView caloriesText = ViewBindings.findChildViewById(rootView, id);
      if (caloriesText == null) {
        break missingId;
      }

      id = R.id.carbs_text;
      TextView carbsText = ViewBindings.findChildViewById(rootView, id);
      if (carbsText == null) {
        break missingId;
      }

      id = R.id.details_group;
      Group detailsGroup = ViewBindings.findChildViewById(rootView, id);
      if (detailsGroup == null) {
        break missingId;
      }

      id = R.id.error_message;
      TextView errorMessage = ViewBindings.findChildViewById(rootView, id);
      if (errorMessage == null) {
        break missingId;
      }

      id = R.id.fat_text;
      TextView fatText = ViewBindings.findChildViewById(rootView, id);
      if (fatText == null) {
        break missingId;
      }

      id = R.id.food_image;
      ImageView foodImage = ViewBindings.findChildViewById(rootView, id);
      if (foodImage == null) {
        break missingId;
      }

      id = R.id.food_name_text;
      TextView foodNameText = ViewBindings.findChildViewById(rootView, id);
      if (foodNameText == null) {
        break missingId;
      }

      id = R.id.meal_type_label;
      TextView mealTypeLabel = ViewBindings.findChildViewById(rootView, id);
      if (mealTypeLabel == null) {
        break missingId;
      }

      id = R.id.meal_type_radio_group;
      RadioGroup mealTypeRadioGroup = ViewBindings.findChildViewById(rootView, id);
      if (mealTypeRadioGroup == null) {
        break missingId;
      }

      id = R.id.nutrition_card;
      CardView nutritionCard = ViewBindings.findChildViewById(rootView, id);
      if (nutritionCard == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.protein_text;
      TextView proteinText = ViewBindings.findChildViewById(rootView, id);
      if (proteinText == null) {
        break missingId;
      }

      id = R.id.radio_breakfast;
      RadioButton radioBreakfast = ViewBindings.findChildViewById(rootView, id);
      if (radioBreakfast == null) {
        break missingId;
      }

      id = R.id.radio_dinner;
      RadioButton radioDinner = ViewBindings.findChildViewById(rootView, id);
      if (radioDinner == null) {
        break missingId;
      }

      id = R.id.radio_lunch;
      RadioButton radioLunch = ViewBindings.findChildViewById(rootView, id);
      if (radioLunch == null) {
        break missingId;
      }

      id = R.id.radio_snack;
      RadioButton radioSnack = ViewBindings.findChildViewById(rootView, id);
      if (radioSnack == null) {
        break missingId;
      }

      id = R.id.serving_size_input;
      TextInputEditText servingSizeInput = ViewBindings.findChildViewById(rootView, id);
      if (servingSizeInput == null) {
        break missingId;
      }

      id = R.id.serving_size_layout;
      TextInputLayout servingSizeLayout = ViewBindings.findChildViewById(rootView, id);
      if (servingSizeLayout == null) {
        break missingId;
      }

      return new ActivityFoodDetailsBinding((ScrollView) rootView, addFoodButton, backButton,
          caloriesText, carbsText, detailsGroup, errorMessage, fatText, foodImage, foodNameText,
          mealTypeLabel, mealTypeRadioGroup, nutritionCard, progressBar, proteinText,
          radioBreakfast, radioDinner, radioLunch, radioSnack, servingSizeInput, servingSizeLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

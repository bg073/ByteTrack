// Generated by view binder compiler. Do not edit!
package com.bytetrack.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bytetrack.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBarcodeScannerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton closeButton;

  @NonNull
  public final PreviewView previewView;

  @NonNull
  public final TextView scannerInstructions;

  @NonNull
  public final View scannerOverlay;

  private ActivityBarcodeScannerBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton closeButton, @NonNull PreviewView previewView,
      @NonNull TextView scannerInstructions, @NonNull View scannerOverlay) {
    this.rootView = rootView;
    this.closeButton = closeButton;
    this.previewView = previewView;
    this.scannerInstructions = scannerInstructions;
    this.scannerOverlay = scannerOverlay;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBarcodeScannerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBarcodeScannerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_barcode_scanner, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBarcodeScannerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.close_button;
      ImageButton closeButton = ViewBindings.findChildViewById(rootView, id);
      if (closeButton == null) {
        break missingId;
      }

      id = R.id.preview_view;
      PreviewView previewView = ViewBindings.findChildViewById(rootView, id);
      if (previewView == null) {
        break missingId;
      }

      id = R.id.scanner_instructions;
      TextView scannerInstructions = ViewBindings.findChildViewById(rootView, id);
      if (scannerInstructions == null) {
        break missingId;
      }

      id = R.id.scanner_overlay;
      View scannerOverlay = ViewBindings.findChildViewById(rootView, id);
      if (scannerOverlay == null) {
        break missingId;
      }

      return new ActivityBarcodeScannerBinding((ConstraintLayout) rootView, closeButton,
          previewView, scannerInstructions, scannerOverlay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
